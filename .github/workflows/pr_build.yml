name: Integration Tests

on:
  workflow_dispatch:
  schedule:
    - cron: '0 9 * * *'
  pull_request:
    branches: [ master, develop ]
  push:
    branches: [ master, develop ]

jobs:
  build-client:
    name: Build the Client
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    env:
      SEGMENT_DOWNLOAD_TIMEOUT_MINS: '5'
      NODE_ENV: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Bun version manager
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            ./client/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Build project
        run: bun install --frozen-lockfile && bun run build

      - name: Upload client build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: client-build-artifacts-${{ github.sha }}
          path: |
            ./client/build
            ./client/.svelte-kit
            ./client/package.json
            ./client/bun.lockb
          retention-days: 7
          if-no-files-found: error

  build-server:
    name: Build the Server
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    env:
      SEGMENT_DOWNLOAD_TIMEOUT_MINS: '5'
      TESTCONTAINERS_RYUK_DISABLED: true
      GRADLE_OPTS: "-Xmx4g -Xms1g -Dorg.gradle.daemon=false"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21 Temurin
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'
          cache-dependency-path: |
            server/*.gradle*
            server/**/gradle-wrapper.properties      

      - name: Docker network setup
        run: |
          docker network create integration-tests || true
          docker network ls

      - name: Build with Gradle
        run: |
          docker ps
          docker info
          ./gradlew clean build --stacktrace
        env:
          DOCKER_HOST: unix:///var/run/docker.sock
          TC_DAEMON: true
          TESTCONTAINERS_DOCKER_SOCKET_OVERRIDE: /var/run/docker.sock
          TESTCONTAINERS_CHECKS_DISABLE: true

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: server-build-artifacts-${{ github.sha }}
          path: |
            ./server/build/libs
          retention-days: 7
          if-no-files-found: error

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.sha }}
          path: |
            ./server/build/reports
          retention-days: 7
          if-no-files-found: warn
