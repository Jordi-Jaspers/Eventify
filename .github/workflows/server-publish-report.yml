name: Publish Server Report

on:
  workflow_call:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy-report:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Get build information
        id: build_info
        run: |
          echo "timestamp=$(date +%Y-%m-%d_%H-%M-%S)" >> $GITHUB_OUTPUT
          echo "run_id=${{ github.run_id }}" >> $GITHUB_OUTPUT

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          fetch-depth: 1
        continue-on-error: true

      - name: Create reports directory
        run: |
          mkdir -p reports
          if [ -d "gh-pages" ]; then
            cp -r gh-pages/* reports/ || true
          fi

      - name: Download Quality Report
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: server-quality-report
          path: reports/${{ steps.build_info.outputs.run_id }}/quality
        continue-on-error: true

      - name: Download Test Report
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: server-test-report
          path: reports/${{ steps.build_info.outputs.run_id }}/tests
        continue-on-error: true

      - name: Create index files for reports
        run: |
          # Function to create index for a directory
          create_index() {
            local dir=$1
            local title=$2
            local index_file="$dir/index.html"
          
            # Get list of subdirectories and files
            local items=($(find "$dir" -maxdepth 1 -mindepth 1 -type d -printf "%f\n" | sort))
            local files=($(find "$dir" -maxdepth 1 -mindepth 1 -type f -name "*.html" ! -name "index.html" -printf "%f\n" | sort))
          
            # Create index file
            cat > "$index_file" << EOF
          <!DOCTYPE html>
          <html>
          <head>
            <title>$title</title>
            <style>
              body { font-family: Arial, sans-serif; margin: 2em; }
              .back-link { margin-bottom: 2em; }
            </style>
          </head>
          <body>
            <div class="back-link"><a href="../">‚Üê Back to parent directory</a></div>
            <h1>$title</h1>
          EOF
          
            # Add directories
            if [ ${#items[@]} -gt 0 ]; then
              echo "<h2>Directories:</h2><ul>" >> "$index_file"
              for item in "${items[@]}"; do
                echo "<li><a href=\"$item/\">$item</a></li>" >> "$index_file"
              done
              echo "</ul>" >> "$index_file"
            fi
          
            # Add files
            if [ ${#files[@]} -gt 0 ]; then
              echo "<h2>Reports:</h2><ul>" >> "$index_file"
              for file in "${files[@]}"; do
                echo "<li><a href=\"$file\">$file</a></li>" >> "$index_file"
              done
              echo "</ul>" >> "$index_file"
            fi
          
            # Close HTML
            echo "</body></html>" >> "$index_file"
          }

          # Create indexes for quality report directories
          if [ -d "reports/${{ steps.build_info.outputs.run_id }}/quality" ]; then
            # Main quality index
            create_index "reports/${{ steps.build_info.outputs.run_id }}/quality" "Quality Reports"
          
            # Create index for each subdirectory in quality
            for dir in reports/${{ steps.build_info.outputs.run_id }}/quality/*/; do
              if [ -d "$dir" ]; then
                create_index "$dir" "$(basename "$dir") Report"
              fi
            done
          fi

          # Create index for test reports
          if [ -d "reports/${{ steps.build_info.outputs.run_id }}/tests" ]; then
            create_index "reports/${{ steps.build_info.outputs.run_id }}/tests" "Test Reports"
          fi

          # Create build-specific index
          cat > reports/${{ steps.build_info.outputs.run_id }}/index.html << EOF
          <!DOCTYPE html>
          <html>
          <head>
            <title>Build Report - Run ${{ steps.build_info.outputs.run_id }}</title>
            <style>
              body { font-family: Arial, sans-serif; margin: 2em; }
              .back-link { margin-bottom: 2em; }
            </style>
          </head>
          <body>
            <div class="back-link"><a href="../">‚Üê Back to all reports</a></div>
            <h1>Build Report - Run ${{ steps.build_info.outputs.run_id }}</h1>
            <h2>Reports:</h2>
            <ul>
              <li><a href="quality/">Quality Reports</a></li>
              <li><a href="tests/">Test Reports</a></li>
            </ul>
          </body>
          </html>
          EOF

          # Create main index
          cat > reports/index.html << EOF
          <!DOCTYPE html>
          <html>
          <head>
            <title>Build Reports</title>
            <style>
              body { font-family: Arial, sans-serif; margin: 2em; }
            </style>
          </head>
          <body>
            <h1>Build Reports</h1>
            <h2>Latest Build:</h2>
            <p><a href="${{ steps.build_info.outputs.run_id }}/">Run ${{ steps.build_info.outputs.run_id }}</a></p>
          </body>
          </html>
          EOF

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: reports

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Print deployment URL
        if: success() && steps.deployment.outputs.page_url != ''
        run: |
          echo "::notice title=üìä Report URL::${{ steps.deployment.outputs.page_url }}${{ steps.build_info.outputs.run_id }}"
