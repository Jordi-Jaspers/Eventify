name: Publish Server Report

on:
  workflow_call:
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy-report:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Get build information
        id: build_info
        run: |
          echo "timestamp=$(date +%Y-%m-%d_%H-%M-%S)" >> $GITHUB_OUTPUT
          echo "run_id=${{ github.run_id }}" >> $GITHUB_OUTPUT
          echo "branch_name=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Checkout main for scripts
        uses: actions/checkout@v4
        with:
          path: main-branch

      - name: Setup gh-pages branch
        run: |
          # Configure git with token-based authentication
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Try to clone gh-pages branch
          git clone --single-branch --branch gh-pages "https://x-access-token:${{ github.token }}@github.com/${{ github.repository }}.git" gh-pages || {
            echo "gh-pages branch not found, creating it..."
            # Create and initialize gh-pages branch
            git clone "https://x-access-token:${{ github.token }}@github.com/${{ github.repository }}.git" gh-pages
            cd gh-pages
            git checkout --orphan gh-pages
            git reset --hard
            mkdir -p reports  # Create reports directory
            git commit --allow-empty -m "Initialize gh-pages branch"
            git push "https://x-access-token:${{ github.token }}@github.com/${{ github.repository }}.git" gh-pages
            cd ..
          }
          
          # Ensure reports directory exists
          mkdir -p gh-pages/reports

      - name: Download Quality Report
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: server-quality-report
          path: gh-pages/reports/${{ steps.build_info.outputs.branch_name }}/${{ steps.build_info.outputs.run_id }}/quality
        continue-on-error: true

      - name: Download Test Report
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: server-test-report
          path: gh-pages/reports/${{ steps.build_info.outputs.branch_name }}/${{ steps.build_info.outputs.run_id }}/tests
        continue-on-error: true

      - name: Make scripts executable
        run: |
          chmod +x main-branch/.github/scripts/create-run-index.sh
          chmod +x main-branch/.github/scripts/create-branch-index.sh
          chmod +x main-branch/.github/scripts/create-main-index.sh

      - name: Create indexes
        run: |
          cd gh-pages/reports
          
          # Debug current location and content
          pwd
          ls -R
          
          # Create indexes using absolute paths to scripts
          "${GITHUB_WORKSPACE}/main-branch/.github/scripts/create-run-index.sh" "${{ steps.build_info.outputs.branch_name }}/${{ steps.build_info.outputs.run_id }}"
          "${GITHUB_WORKSPACE}/main-branch/.github/scripts/create-branch-index.sh" "${{ steps.build_info.outputs.branch_name }}/${{ steps.build_info.outputs.run_id }}"
          "${GITHUB_WORKSPACE}/main-branch/.github/scripts/create-main-index.sh" "${{ steps.build_info.outputs.branch_name }}/${{ steps.build_info.outputs.run_id }}"

      - name: Commit and push changes
        run: |
          cd gh-pages
          git add .
          git commit -m "Add report for run ${{ steps.build_info.outputs.run_id }} and update indexes" || echo "No changes to commit"
          git push "https://x-access-token:${{ github.token }}@github.com/${{ github.repository }}.git" gh-pages

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: gh-pages/reports

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Print deployment URL
        if: success() && steps.deployment.outputs.page_url != ''
        run: |
          echo "::notice title=ðŸ“Š Report URL::${{ steps.deployment.outputs.page_url }}reports/${{ steps.build_info.outputs.branch_name }}/${{ steps.build_info.outputs.run_id }}"
