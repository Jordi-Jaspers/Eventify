name: Publish Server Report

on:
  workflow_call:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy-report:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Get build information
        id: build_info
        run: |
          echo "timestamp=$(date +%Y-%m-%d_%H-%M-%S)" >> $GITHUB_OUTPUT
          echo "run_id=${{ github.run_id }}" >> $GITHUB_OUTPUT

      # First checkout main branch for scripts
      - name: Checkout main for scripts
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          path: main-branch

      # Then checkout gh-pages for reports
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages-branch
        continue-on-error: true

      - name: Create reports directory and preserve existing reports
        run: |
          # Initialize reports directory
          mkdir -p reports
          
          # Debug output
          echo "Current reports directory structure:"
          ls -la gh-pages-branch/ 
          
          # If gh-pages exists and has content, copy everything except the current run
          if [ -d "gh-pages-branch" ] && [ -d "gh-pages-branch/reports" ]; then
            echo "Found existing reports, preserving them..."
            cp -r gh-pages-branch/reports/* reports/ || true
          fi
          
          # Ensure the new run directory exists
          mkdir -p reports/${{ steps.build_info.outputs.run_id }}
          
          # Debug output
          echo "Current reports directory structure:"
          ls -la reports/

      - name: Download Quality Report
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: server-quality-report
          path: reports/${{ steps.build_info.outputs.run_id }}/quality
        continue-on-error: true

      - name: Download Test Report
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: server-test-report
          path: reports/${{ steps.build_info.outputs.run_id }}/tests
        continue-on-error: true

      - name: Make scripts executable
        run: |
          chmod +x main-branch/.github/scripts/create-indexes.sh
          chmod +x main-branch/.github/scripts/create-main-indexes.sh

      - name: Create indexes
        run: |
          main-branch/.github/scripts/create-indexes.sh "${{ steps.build_info.outputs.run_id }}"
          main-branch/.github/scripts/create-main-indexes.sh "${{ steps.build_info.outputs.run_id }}"
        working-directory: .

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: reports

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Print deployment URL
        if: success() && steps.deployment.outputs.page_url != ''
        run: |
          echo "::notice title=ðŸ“Š Report URL::${{ steps.deployment.outputs.page_url }}${{ steps.build_info.outputs.run_id }}"
